/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as ProductsIdImport } from './routes/products/$id'
import { Route as ProductsSearchRouteImport } from './routes/products/search/route'
import { Route as ProductsSearchIndexImport } from './routes/products/search/index'
import { Route as ProductsIdEditImport } from './routes/products/$id_.edit'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIdRoute = ProductsIdImport.update({
  id: '/products/$id',
  path: '/products/$id',
  getParentRoute: () => rootRoute,
} as any)

const ProductsSearchRouteRoute = ProductsSearchRouteImport.update({
  id: '/products/search',
  path: '/products/search',
  getParentRoute: () => rootRoute,
} as any)

const ProductsSearchIndexRoute = ProductsSearchIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProductsSearchRouteRoute,
} as any)

const ProductsIdEditRoute = ProductsIdEditImport.update({
  id: '/products/$id_/edit',
  path: '/products/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/products/search': {
      id: '/products/search'
      path: '/products/search'
      fullPath: '/products/search'
      preLoaderRoute: typeof ProductsSearchRouteImport
      parentRoute: typeof rootRoute
    }
    '/products/$id': {
      id: '/products/$id'
      path: '/products/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof ProductsIdImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/$id_/edit': {
      id: '/products/$id_/edit'
      path: '/products/$id/edit'
      fullPath: '/products/$id/edit'
      preLoaderRoute: typeof ProductsIdEditImport
      parentRoute: typeof rootRoute
    }
    '/products/search/': {
      id: '/products/search/'
      path: '/'
      fullPath: '/products/search/'
      preLoaderRoute: typeof ProductsSearchIndexImport
      parentRoute: typeof ProductsSearchRouteImport
    }
  }
}

// Create and export the route tree

interface ProductsSearchRouteRouteChildren {
  ProductsSearchIndexRoute: typeof ProductsSearchIndexRoute
}

const ProductsSearchRouteRouteChildren: ProductsSearchRouteRouteChildren = {
  ProductsSearchIndexRoute: ProductsSearchIndexRoute,
}

const ProductsSearchRouteRouteWithChildren =
  ProductsSearchRouteRoute._addFileChildren(ProductsSearchRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/products/search': typeof ProductsSearchRouteRouteWithChildren
  '/products/$id': typeof ProductsIdRoute
  '/products': typeof ProductsIndexRoute
  '/products/$id/edit': typeof ProductsIdEditRoute
  '/products/search/': typeof ProductsSearchIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/products/$id': typeof ProductsIdRoute
  '/products': typeof ProductsIndexRoute
  '/products/$id/edit': typeof ProductsIdEditRoute
  '/products/search': typeof ProductsSearchIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/products/search': typeof ProductsSearchRouteRouteWithChildren
  '/products/$id': typeof ProductsIdRoute
  '/products/': typeof ProductsIndexRoute
  '/products/$id_/edit': typeof ProductsIdEditRoute
  '/products/search/': typeof ProductsSearchIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/products/search'
    | '/products/$id'
    | '/products'
    | '/products/$id/edit'
    | '/products/search/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/products/$id'
    | '/products'
    | '/products/$id/edit'
    | '/products/search'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/products/search'
    | '/products/$id'
    | '/products/'
    | '/products/$id_/edit'
    | '/products/search/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ProductsSearchRouteRoute: typeof ProductsSearchRouteRouteWithChildren
  ProductsIdRoute: typeof ProductsIdRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  ProductsIdEditRoute: typeof ProductsIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ProductsSearchRouteRoute: ProductsSearchRouteRouteWithChildren,
  ProductsIdRoute: ProductsIdRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  ProductsIdEditRoute: ProductsIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/products/search",
        "/products/$id",
        "/products/",
        "/products/$id_/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/products/search": {
      "filePath": "products/search/route.tsx",
      "children": [
        "/products/search/"
      ]
    },
    "/products/$id": {
      "filePath": "products/$id.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/products/$id_/edit": {
      "filePath": "products/$id_.edit.tsx"
    },
    "/products/search/": {
      "filePath": "products/search/index.tsx",
      "parent": "/products/search"
    }
  }
}
ROUTE_MANIFEST_END */
